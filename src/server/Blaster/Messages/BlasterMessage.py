#automatically generated by the FlatBuffers compiler, do not modify

#namespace : Messages

import flatbuffers from flatbuffers.compat import import_numpy np = import_numpy()

    class BlasterMessage(object) : __slots__ =['_tab']

    @classmethod def GetRootAsBlasterMessage(cls, buf, offset) : n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset) x = BlasterMessage() x.Init(buf, n + offset) return x

#BlasterMessage
                                                                                                                                                                 def Init(self, buf, pos) : self._tab = flatbuffers.table.Table(buf, pos)

#BlasterMessage
                                                                                                                                                                                                                                    def From_(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos) return 0

#BlasterMessage
                                                                                                                                                                                                                                                                                                                                                               def MessageType(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos) return 0

#BlasterMessage
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                def Message(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8)) if o != 0 : from flatbuffers.table import Table obj = Table(bytearray(), 0) self._tab.Union(obj, o) return obj return None

def BlasterMessageStart(builder) : builder.StartObject(3) def BlasterMessageAddFrom_(builder, from_) : builder.PrependInt16Slot(0, from_, 0) def BlasterMessageAddMessageType(builder, messageType) : builder.PrependUint8Slot(1, messageType, 0) def BlasterMessageAddMessage(builder, message) : builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0) def BlasterMessageEnd(builder) : return builder.EndObject()
