#automatically generated by the FlatBuffers compiler, do not modify

#namespace : Messages

import flatbuffers from flatbuffers.compat import import_numpy np = import_numpy()

    class VisualObject(object) : __slots__ =['_tab']

    @classmethod def GetRootAsVisualObject(cls, buf, offset) : n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset) x = VisualObject() x.Init(buf, n + offset) return x

#VisualObject
                                                                                                                                                             def Init(self, buf, pos) : self._tab = flatbuffers.table.Table(buf, pos)

#VisualObject
                                                                                                                                                                                                                                def Pos(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4)) if o != 0 : x = o + self._tab.Pos from Blaster.Messages.Point import Point obj = Point() obj.Init(self._tab.Bytes, x) return obj return None

#VisualObject
                                                                                                                                                                                                                                                                                                                                                                                                                          def Outline(self, j) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6)) if o != 0 : x = self._tab.Vector(o) x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 8 from Blaster.Messages.Point import Point obj = Point() obj.Init(self._tab.Bytes, x) return obj return None

#VisualObject
def OutlineLength(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6)) if o != 0 : return self._tab.VectorLen(o) return 0

#VisualObject
def OutlineIsNone(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6)) return o == 0

#VisualObject
def RenderMode(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos) return 1

#VisualObject
def Color(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10)) if o != 0 : x = o + self._tab.Pos from Blaster.Messages.Color import Color obj = Color() obj.Init(self._tab.Bytes, x) return obj return None

#VisualObject
def Vx(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos) return 0.0

#VisualObject
def Vy(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos) return 0.0

#VisualObject
def Rot(self) : o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16)) if o != 0 : return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos) return 0.0

def VisualObjectStart(builder) : builder.StartObject(7) def VisualObjectAddPos(builder, pos) : builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(pos), 0) def VisualObjectAddOutline(builder, outline) : builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(outline), 0) def VisualObjectStartOutlineVector(builder, numElems) : return builder.StartVector(8, numElems, 4) def VisualObjectAddRenderMode(builder, renderMode) : builder.PrependInt8Slot(2, renderMode, 1) def VisualObjectAddColor(builder, color) : builder.PrependStructSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(color), 0) def VisualObjectAddVx(builder, vx) : builder.PrependFloat32Slot(4, vx, 0.0) def VisualObjectAddVy(builder, vy) : builder.PrependFloat32Slot(5, vy, 0.0) def VisualObjectAddRot(builder, rot) : builder.PrependFloat32Slot(6, rot, 0.0) def VisualObjectEnd(builder) : return builder.EndObject()
